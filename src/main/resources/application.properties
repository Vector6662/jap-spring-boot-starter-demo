
# basic 基本配置
jap.basic.sso=false
jap.basic.cache-expire-time=12
jap.basic.token-expire-time=12
# sso
jap.sso.cookie-domain=123
jap.sso.cookie-max-age=312321
jap.sso.cookie-name=3123124

# simple

# social

# social 缓存
jap.social.cache.type=default

jap.social.gitee.platform=gitee
jap.social.gitee.state=3242vregv
jap.social.gitee.just-auth-config.client-id=228d103043840b9706f04ad165726a0079c7e0263bf7c11f1205b4054ff094a9
jap.social.gitee.just-auth-config.client-secret=a06ccbdef86d193f25dc240d3e0a9038801ff3cf4c40937f2b58904c8f32a298
jap.social.gitee.just-auth-config.redirect-uri=http://localhost:8080/socail/gitee



# oauth2

# gitee平台
# 授权码方式
jap.oauth2[0].platform=gitee
jap.oauth2[0].response-type=code
jap.oauth2[0].client-id=e9b4f19402d2ccb3375f5be19b9c76738fffe071d6b450a65dc4baa70a7ab752
jap.oauth2[0].client-secret=83bd48fc1ec9807f769c6328304e6222f2290b57d60f346a24976b48a752b794
jap.oauth2[0].grant-type=authorization_code
# The URL in your application where users will be sent after authorization. 来自：https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#parameters
# 用户授权后，也就是第一阶段gitee给我的服务器返回code的地址。这个参数我感觉我的服务器并没有啥用呀，感觉只有gitee端用得着。可能这是要作检查啥的吧，搞不懂。
# gitee服务器是不关心这个地址的有效性的，因为gitee只对这个地址进行重定向而不是转发，只不过让这个地址带上了参数code，也就是最终请求这个localhost地址的是用户的浏览器！
jap.oauth2[0].callback-url=http://localhost:8080/oauth/gitee/authorization-code
# 获取token的地址
jap.oauth2[0].token-url=https://gitee.com/oauth/token
# 所有的api在：https://gitee.com/api/v5/swagger#/getV5User
jap.oauth2[0].userinfo-url=https://gitee.com/api/v5/user
# 获取user info的方法，GET、POST等。每个platform的不一样，需要查看具体平台的API
jap.oauth2[0].user-info-endpoint-method-type=get
# 获取授权码code的地址
jap.oauth2[0].authorization-url=https://gitee.com/oauth/authorize
jap.oauth2[0].verify-state=false
# password方式
jap.oauth2[1].platform=gitee
jap.oauth2[1].client-id=e9b4f19402d2ccb3375f5be19b9c76738fffe071d6b450a65dc4baa70a7ab752
jap.oauth2[1].client-secret=83bd48fc1ec9807f769c6328304e6222f2290b57d60f346a24976b48a752b794
jap.oauth2[1].grant-type=password
jap.oauth2[1].token-url=https://gitee.com/oauth/token
jap.oauth2[1].callback-url=http://localhost:8080/oauth/gitee/redirect
jap.oauth2[1].userinfo-url=https://gitee.com/api/v5/user
jap.oauth2[1].user-info-endpoint-method-type=get


# GitHub平台
jap.oauth2[2].platform=github
jap.oauth2[2].response-type=code
jap.oauth2[2].client-id=772a23a61ae5ef9df25e
jap.oauth2[2].client-secret=d01a6a44bcf838d4e6d7b572279af59425e35a7a
jap.oauth2[2].grant-type=authorization_code
jap.oauth2[2].callback-url=http://localhost:8080/oauth/github/authorization-code
jap.oauth2[2].authorization-url=https://github.com/login/oauth/authorize
jap.oauth2[2].token-url=https://github.com/login/oauth/access_token
jap.oauth2[2].userinfo-url=https://api.github.com/user
jap.oauth2[2].verify-state=false

#微博
#参考api：https://open.weibo.com/wiki/%E5%BE%AE%E5%8D%9AAPI#OAuth2
jap.oauth2[3].platform=weibo
jap.oauth2[3].authorization-url=https://api.weibo.com/oauth2/authorize
# 这个地址在两个地方有用，第一个是访问/oauth2/authorize接口时作为重定向地址，第二个是访问/oauth2/access_token要带上，但是此时感觉没啥卵用，
# 但是微博就要求带上：回调地址，需需与注册应用里的回调地址一致。
jap.oauth2[3].callback-url=http://localhost:8080/oauth/weibo/authenticate-code
jap.oauth2[3].token-url=https://api.weibo.com/oauth2/access_token
jap.oauth2[3].access-token-endpoint-method-type=post
jap.oauth2[3].grant-type=authorization_code
jap.oauth2[3].response-type=code
jap.oauth2[3].client-id=xxx
jap.oauth2[3].client-secret=xxx
jap.oauth2[3].userinfo-url=https://api.weibo.com/2/users/show.json
jap.oauth2[3].user-info-endpoint-method-type=get
jap.oauth2[3].verify-state=true
jap.oauth2[3].state=245rfegfsaf
jap.oauth2[3].revoke-token-url=https://api.weibo.com/oauth2/revokeoauth2



# JapUserService
jap.simple-user-service=my.dong6662.japspringbootstarterdemo.service.SimpleUserServiceImpl
jap.social-user-service=my.dong6662.japspringbootstarterdemo.service.SocialUserServiceImpl
jap.oauth2-user-service=my.dong6662.japspringbootstarterdemo.service.Oauth2UserServiceImpl

# token缓存，目前只是token的cache
jap.cache.token.type=redis
jap.cache.token.expire-time=3m

# user缓存
jap.cache.user.type=redis

# redis配置
spring.redis.port=6379
spring.redis.host=127.0.0.1
spring.redis.timeout=3m